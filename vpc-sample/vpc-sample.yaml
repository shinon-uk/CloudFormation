# CloudFormation Template for VPC
# Builder
# @shinon-uk

AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC Template'


Parameters:

  AppName:
    Description:  Please specify the application name.
    Type:         String
    Default:      "example"

  Environment:
    Description:    Please specify the target environment.
    Type:           String
    Default:        "dev"
    AllowedValues:
      - prod
      - stg
      - dev

  VpcCidr:
    Description: Please specify the VPC IP
    Type: String
    Default: '10.0.0.0/16'
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  Public1SubnetCidr: 
    Description: Please specify the Subnet IP for Public1
    Type: String
    Default: '10.0.0.0/20'
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  Private1SubnetCidr: 
    Description: Please specify the Subnet IP for Public1
    Type: String
    Default: '10.0.64.0/20'
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'


Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      InstanceTenancy: default
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub '${AppName}-${Environment}-vpc'

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${AppName}-${Environment}-igw'

  VPCInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'VPC'
      InternetGatewayId: !Ref 'InternetGateway'

  SubnetPublic1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref Public1SubnetCidr
      AvailabilityZone: !Select [ 0, !GetAZs ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Sub '${AppName}-${Environment}-Public1'

  SubnetPrivate1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref Private1SubnetCidr
      AvailabilityZone: !Select [ 0, !GetAZs ]
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Sub '${AppName}-${Environment}-Private1'

  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Sub '${AppName}-${Environment}-rt-public'

  RouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Sub '${AppName}-${Environment}-rt-private'

  RoutePublic:
    Type: AWS::EC2::Route
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref 'RouteTablePublic'
      GatewayId: !Ref 'InternetGateway'

  SubnetRouteTableAssociationPublic1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'RouteTablePublic'
      SubnetId: !Ref 'SubnetPublic1'

  SubnetRouteTableAssociationPrivate1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'RouteTablePrivate'
      SubnetId: !Ref 'SubnetPrivate1'


Outputs:

  VpcId:
    Description: VPC ID
    Value: !Ref 'VPC'
    Export:
      Name: !Sub '${AWS::StackName}-VpcId'

  SubnetPublic1:
    Description: Public subnet 1
    Value: !Ref 'SubnetPublic1'
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet1'

  SubnetPrivate1:
    Description: Private subnet 1
    Value: !Ref 'SubnetPrivate1'
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1'
